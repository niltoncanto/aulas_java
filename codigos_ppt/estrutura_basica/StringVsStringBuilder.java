public class StringVsStringBuilder {
    public static void main(String[] args) {
        // 游댳 Exemplo com String (imut치vel)
        System.out.println("游댳 Exemplo com String:");
        String texto = "Ol치";
        texto += ", mundo!";  // Cria um novo objeto String
        texto += " Como vai?";
        System.out.println(texto); // Sa칤da: Ol치, mundo! Como vai?

        // 游댳 Exemplo com StringBuilder (mut치vel)
        System.out.println("\n游댳 Exemplo com StringBuilder:");
        StringBuilder sb = new StringBuilder("Ol치");
        sb.append(", mundo!");  // Modifica no mesmo espa칞o de mem칩ria
        sb.append(" Como vai?");
        System.out.println(sb.toString()); // Sa칤da: Ol치, mundo! Como vai?


        // 游댳 Demonstrando m칠todos 칰teis do StringBuilder
        System.out.println("\n游댳 M칠todos 칰teis do StringBuilder:");
        StringBuilder frase = new StringBuilder("Eu gosto de Python");

        frase.replace(12, 18, "Java"); // Substitui "Python" por "Java"
        System.out.println("replace(): " + frase); // Sa칤da: Eu gosto de Java

        frase.insert(0, "Aprender "); // Insere no in칤cio
        System.out.println("insert(): " + frase); // Sa칤da: Aprender Eu gosto de Java

        frase.delete(0, 9); // Remove "Aprender "
        System.out.println("delete(): " + frase); // Sa칤da: Eu gosto de Java

        frase.reverse(); // Inverte o texto
        System.out.println("reverse(): " + frase); // Sa칤da: avaJ ed otsog uoE

                // 游댳 Comparando velocidade de concatena칞칚o
                System.out.println("\n游댳 Comparando desempenho (concatena칞칚o 10000 vezes):");

                // Medindo tempo para String
                long inicioString = System.currentTimeMillis();
                String str = "";
                for (int i = 0; i < 10000; i++) {
                    str += "a";  // Ineficiente (cria um novo objeto a cada itera칞칚o)
                }
                long tempoString = System.currentTimeMillis() - inicioString;
                System.out.println("Tempo com String: " + tempoString + "ms");
        
                // Medindo tempo para StringBuilder
                long inicioSB = System.currentTimeMillis();
                StringBuilder sbTest = new StringBuilder();
                for (int i = 0; i < 10000; i++) {
                    sbTest.append("a");  // Muito mais eficiente!
                }
                long tempoSB = System.currentTimeMillis() - inicioSB;
                System.out.println("Tempo com StringBuilder: " + tempoSB + "ms");
        
    }
}

